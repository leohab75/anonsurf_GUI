#!/bin/bash

###  COMAND TO /etc/init.d/anonsurf -h
# /etc/init.d/anonsurf start
# /etc/init.d/anonsurf stop
# /etc/init.d/anonsurf restart
# /etc/init.d/anonsurf ip
# /etc/init.d/anonsurf change
# /etc/init.d/anonsurf status
###


export BLUE='\033[1;94m'
export GREEN='\033[1;92m'
export RED='\033[1;91m'
export RESETCOLOR='\033[1;00m'

if [[ $EUID -ne 0 ]]; then
   echo -e -n " $GREEN*$BLUE "this script must be run as root" $RESETCOLOR\n"
   exit 1
fi

# Destinations you don't want routed through Tor
TOR_EXCLUDE="192.168.0.0/16 172.16.0.0/12 10.0.0.0/8"

# The UID Tor runs as
# change it if, starting tor, the command 'ps -e | grep tor' returns a different UID
if [[ -n  $(cat /etc/os-release |  grep -i arch) ]]; then 
	TOR_UID="tor"
else
	TOR_UID="debian-tor"
fi

# Tor's TransPort
TOR_PORT="9040"


function init {
	#echo -e -n " $GREEN*$BLUE killing dangerous applications$RESETCOLOR\n"
	#killall -q chrome dropbox iceweasel skype icedove thunderbird firefox chromium xchat transmission deluge pidgin pidgin.orig
	
	echo -e -n " $GREEN*$BLUE cleaning some dangerous cache elements"
	bleachbit -c adobe_reader.cache chromium.cache chromium.current_session chromium.history elinks.history emesene.cache epiphany.cache firefox.url_history flash.cache flash.cookies google_chrome.cache google_chrome.history  links2.history opera.cache opera.search_history opera.url_history &> /dev/null
}



function ip {

	echo -e "\nMy ip is:\n"
	sleep 1
	wget -qO- eth0.me # Had a few issues with FrozenBox giving me the wrong IP address
	echo -e "\n\n-------"
}

function start {
	
	
	#Check defaults for Tor
	grep -q -x 'RUN_DAEMON="yes"' /etc/default/tor
	if [ $? -ne 0 ]; then
		echo 'RUN_DAEMON="yes"'  >> /etc/default/tor
	fi	
	
	# Kill IPv6 services
	echo -e "\n$GREEN[$BLUE i$GREEN ]$BLUE Stopping IPv6 services:$RESETCOLOR\n"
	sed -i '/^.*\#anonsurf$/d' /etc/sysctl.conf #delete lines containing #anonsurf in /etc/sysctl.conf
	# add lines to sysctl.conf that will kill ipv6 services
	echo "net.ipv6.conf.all.disable_ipv6 = 1 #anonsurf" >> /etc/sysctl.conf
	echo "net.ipv6.conf.default.disable_ipv6=1 #anonsurf" >> /etc/sysctl.conf
	sysctl -p > /dev/null  # have sysctl reread /etc/sysctl.conf

	echo -e "\n$GREEN[$BLUE i$GREEN ]$BLUE Starting anonymous mode:$RESETCOLOR\n"
	
	if [ ! -e /var/run/tor/tor.pid ]; then
		echo -e " $RED*$BLUE Tor  $GREEN starting it $BLUE for you$RESETCOLOR\n" >&2
		service NetworkManager force-reload > /dev/null 2>&1 || systemctl restart NetworkManager.service  > /dev/null 2>&1 
		killall dnsmasq > /dev/null 2>&1
		killall nscd > /dev/null 2>&1	
		systemctl start tor
		sleep 1
	fi

	if  [ -f /etc/network/iptables.rules ]; then
		iptables-save > /etc/network/iptables.rules
		echo -e " $GREEN*$BLUE Saved iptables rules$RESETCOLOR\n"
	fi

	#dns resolv
	mv /etc/resolv.conf /etc/resolv.conf.bak
	echo -e 'nameserver 127.0.0.1\nnameserver 209.222.18.222\nnameserver 9.9.9.9' > /etc/resolv.conf
	echo -e " $GREEN*$BLUE Modified resolv.conf to use Tor and Private Internet Access DNS"
	
	systemctl restart systemd-resolved
	
	iptables -F
	iptables -t nat -F
	
	
	

	# set iptables nat
	iptables -t nat -A OUTPUT -m owner --uid-owner $TOR_UID -j RETURN
	iptables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 53
	iptables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 53
	iptables -t nat -A OUTPUT -p udp -m owner --uid-owner $TOR_UID -m udp --dport 53 -j REDIRECT --to-ports 53
	
	#resolve .onion domains mapping 10.192.0.0/10 address space
	iptables -t nat -A OUTPUT -p tcp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
	iptables -t nat -A OUTPUT -p udp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
	
	#exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/9 127.128.0.0/10; do
		iptables -t nat -A OUTPUT -d $NET -j RETURN
	done
	
	#redirect all other output through TOR
	iptables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports $TOR_PORT
	iptables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports $TOR_PORT
	iptables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports $TOR_PORT
	
	#accept already established connections
	iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	
	#exclude local addresses
	for NET in $TOR_EXCLUDE 127.0.0.0/8; do
		iptables -A OUTPUT -d $NET -j ACCEPT
	done
	
	#allow only tor output
	iptables -A OUTPUT -m owner --uid-owner $TOR_UID -j ACCEPT
	iptables -A OUTPUT -j REJECT

	echo -e "$GREEN *$BLUE All traffic was redirected through Tor$RESETCOLOR\n"
	echo -e "$GREEN[$BLUE i$GREEN ]$BLUE You are under AnonSurf tunnel$RESETCOLOR\n"
}





function stop {
	
	iptables -F
	iptables -t nat -F
	echo -e " $GREEN*$BLUE Deleted all iptables rules\n$RESETCOLOR"
	
	if [ -f /etc/network/iptables.rules ]; then
		iptables-restore < /etc/network/iptables.rules
		rm /etc/network/iptables.rules
		echo -e " $GREEN*$BLUE Iptables rules restored"
	fi
	
	# restore DNS settings
	if [ -e /etc/resolv.conf.bak ]; then
		rm /etc/resolv.conf
		mv /etc/resolv.conf.bak /etc/resolv.conf
	else
	  echo -e 'nameserver 127.0.0.1\nnameserver 209.222.18.222\nnameserver 9.9.9.9' > /etc/resolv.conf
	fi

	systemctl stop tor
	systemctl restart systemd-resolved

	echo -e "\n$GREEN[$BLUE i$GREEN ]$BLUE Reenabling IPv6 services:$RESETCOLOR\n"

	# reenable IPv6 services
	sed -i '/^.*\#anonsurf$/d' /etc/sysctl.conf #delete lines containing #anonsurf in /etc/sysctl.conf
	sysctl -p # have sysctl reread /etc/sysctl.conf

	service NetworkManager force-reload > /dev/null 2>&1 || systemctl restart NetworkManager.service > /dev/null 2>&1
	service nscd start > /dev/null 2>&1
	service dnsmasq start > /dev/null 2>&1
	
	echo -e " $GREEN*$BLUE Anonymous mode stopped$RESETCOLOR\n"
}

function change {

	bash /etc/init.d/Anon_country

	if [[ $(cat /tmp/Anon_country) != "" ]]; then
    
	echo -e " $GREEN*$BLUE ExitNodes $(cat /tmp/Anon_country)$RESETCOLOR\n"

    sed  -i '/ExitNodes/d' /etc/tor/torrc
    echo "ExitNodes $(cat /tmp/Anon_country)" >> /etc/tor/torrc
	
	else

	echo -e " $GREEN*$RED default Exitnodes{jp}, {us}, {au}$RESETCOLOR\n"

    sed  -i '/ExitNodes/d' /etc/tor/torrc
    echo "ExitNodes {jp}, {us}, {au}" >> /etc/tor/torrc
	
	fi

	systemctl reload tor
	systemctl restart NetworkManager
	sleep 2

	echo -e " $GREEN*$BLUE Tor daemon reloaded and forced to change nodes$RESETCOLOR\n"
}

function status {

    systemctl status tor
        
}		
	
case "$1" in
	start)
		init
		start
	;;
	stop)
		init
		stop
	;;
	change)
		change
	;;
	status)
		status
	;;
	myip|ip)
		ip
	;;
	restart)
		$0 stop
		sleep 1
		$0 start
	;;
   *)
echo -e "
AnonSurf Module
	Usage:
	$RED┌──[$GREEN$USER$YELLOW@$BLUE`hostname`$RED]─[$GREEN$PWD$RED]
	$RED└──╼ \$$GREEN"" /etc/init.d/anonsurf $RED{$GREEN""start$RED|$GREEN""stop$RED|$GREEN""restart$RED|$GREEN""change$RED""$RED|$GREEN""status$RED""}
	
	$RED start$BLUE -$GREEN Start system-wide anonymous
		  tunneling under TOR proxy through iptables	  
	$RED stop$BLUE -$GREEN Reset original iptables settings
		  and return to clear navigation
	$RED restart$BLUE -$GREEN Combines \"stop\" and \"start\" options
	$RED change$BLUE -$GREEN Changes identity restarting TOR
	$RED status$BLUE -$GREEN Check if AnonSurf is working properly
	$RED myip$BLUE -$GREEN Show your current IP address
	

$RESETCOLOR" >&2
exit 2
;;
esac


echo -e $RESETCOLOR
exit 0
